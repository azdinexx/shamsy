<!doctype html>
<html>
  <head>
    <title>{{ page_title }}</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="description" content="{{ page_description | escape }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
    {{ content_for_header }}
    <!-- Header hook for plugins -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="{{ 'application.css' | asset_url }}" rel="stylesheet">
    <link href="{{ 'homepage.css' | asset_url }}" rel="stylesheet">
    <script src="{{ 'application.js' | asset_url }}" async></script>
  </head>
  <body>
    <!-- Loading Screen -->
    <div id="loading-screen" class="loading-screen">
      <div class="loading-logo">
        <img 
          src="{{ 'PRIMARY-LOGO-(SHAMSY).png' | asset_img_url: 'large' }}" 
          alt="{{ shop.name }}" 
          width="200" 
          height="200"
          class="loading-logo-image">
      </div>
    </div>

    {% render 'header' %}
    <main role="main">
      {{ content_for_layout }}
    </main>

    <script>
      // Loading screen animation
      window.addEventListener('load', function() {
        console.log('Loading animation started');
        const loadingScreen = document.getElementById('loading-screen');
        const loadingLogo = document.querySelector('.loading-logo');
        const headerLogo = document.querySelector('.header-logo .logo-image');
        
        //console.log('Elements found:', { loadingScreen, loadingLogo, headerLogo });
        
        // Hide header logo initially
        if (headerLogo) {
          headerLogo.style.opacity = '0';
        }
        
        // Test animation immediately to see if it works
        setTimeout(function() {
          console.log('Testing animation...');
          
          // Force a reflow to ensure CSS is applied
          loadingLogo.offsetHeight;
          
          // Add animation class
          loadingLogo.classList.add('animate-to-header');
          console.log('Animation class added');
          
          // Check if class was added
          setTimeout(function() {
            console.log('Logo classes:', loadingLogo.className);
            console.log('Logo transform:', loadingLogo.style.transform);
            console.log('Logo computed transform:', window.getComputedStyle(loadingLogo).transform);
          }, 100);
          
          // Fade out loading screen background
          setTimeout(function() {
            loadingScreen.style.backgroundColor = 'rgba(243, 233, 220, 0)';
          }, 1000);
          
          // Show header logo with delay
          setTimeout(function() {
            if (headerLogo) {
              headerLogo.style.opacity = '1';
            }
          }, 1500);
          
          // Remove loading screen after animation
          setTimeout(function() {
            loadingScreen.style.opacity = '0';
            setTimeout(function() {
              loadingScreen.style.display = 'none';
            }, 500);
          }, 3000);
        }, 1000);
      });

      // Header scroll effect - optimized for performance
      let ticking = false;
      let lastScrollTop = 0;
      
      function updateHeader() {
        const header = document.querySelector('.site-header');
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > 50 && lastScrollTop <= 50) {
          header.classList.add('scrolled');
        } else if (scrollTop <= 50 && lastScrollTop > 50) {
          header.classList.remove('scrolled');
        }
        
        lastScrollTop = scrollTop;
        ticking = false;
      }
      
      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(updateHeader);
          ticking = true;
        }
      }
      
      window.addEventListener('scroll', requestTick, { passive: true });
    </script>
  </body>
</html>